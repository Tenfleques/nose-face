{"version":3,"sources":["Components/privateRoute/index.js","Pages/FileUploader/dropzone/Dropzone.js","Controls/AutocompleteTextBox.js","helpers/parse-nose-files.js","Pages/FileUploader/upload/Upload.js","Components/NoseTables/index.js","Components/FileList/listEntry.js","Components/FileList/index.js","helpers/gh-helper.js","Pages/FileUploader/index.js","Components/navbar/index.js","Pages/Investigations/index.js","Pages/Support/index.js","Pages/Home/index.js","Pages/Auth/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","sessionStorage","getItem","to","pathname","state","from","location","Dropzone","highlight","fileInputRef","React","createRef","openFileDialog","bind","onFilesAdded","onDragOver","onDragLeave","onDrop","this","disabled","current","click","evt","files","target","array","fileListToArray","event","preventDefault","disabed","setState","dataTransfer","list","i","length","push","item","className","onClick","style","cursor","ref","type","accept","multiple","onChange","alt","src","AutoCompleteTextBox","autoComplete","e","htmlFor","name","caption","onInput","id","value","placeholder","help","xml","recurseLevel","obj","Array","isArray","res","j","text","elements","contents","ob_tmp","attributes","sid","Number","parseFloat","initial","sort","a","b","time","map","replace","XmlJS","xml2js","blob","textDecode","TextDecoder","uint8","Uint8Array","split","JSON","parse","decode","Upload","uploading","uploadProgress","successfullUploaded","gh_api","catalog","root","authorized","user","uploadFiles","onPathChanged","renderActions","prevProps","prevState","concat","ev","path","api","promises","slice","startsWith","Application","fnam","toLowerCase","Promise","resolve","reject","fr","FileReader","onload","encoded_utf_8","result","textEncoder","TextEncoder","json","stringify","parseXmlToJson","content","encode","join","addEventListener","lengthComputable","copy","percentage","loaded","total","readAsArrayBuffer","that","all","then","filenames","f","upload","pushFiles","updateLoaded","status","onUploadSuccess","catch","file_name","icon","faCheckCircle","faSpinner","file","show_f_name","key","renderProgress","String","prototype","hashCode","hash","charCodeAt","Math","abs","noseMeasureTable","columns","data","page","rows","onClickPagination","measure","headerClass","start","description","c","field","title","init","end","min","flequesGetPagination","pages","floor","btns","fleques_large_table_columns","fleques_large_table_rows","oldProps","table_data","sensors","col_id","readings","flequesLargeTable","ListEntry","FileList","onClickDir","filter","sha","faHome","f_arr","f_n","onClickFile","showFileList","GithubAPI","auth","repo","filesToCommit","currentBranch","newCommit","gh","GitHub","getCurrentTreeSHA","getCommit","commitSHA","commit","treeSHA","tree","createFile","fileInfo","createBlob","mode","createTree","updateHead","getApi","setRepo","userName","repoName","getRepo","setBranch","branchName","listBranches","branches","find","branch","createBranch","message","hasOwnProperty","getRef","object","filesInfo","createFiles","createCommit","console","error","UploadPage","openfile","token","attempt_set_api","trees","getTree","includes","filecontent","getBlob","parseBlobToJson","log","NavBar","useLocation","AppConfig","appname","ALLOWED_EXTS","InvestigationsPage","preview_html","preview_file_status","BRANCH","file_arr","file_ext","processHtml","renderFilePreviewProgress","srcDoc","encoder","video","Blob","URL","createObjectURL","html","processVideo","Home","LoginPage","login","password","submitted","handleChange","handleSubmit","removeItem","setItem","onSubmit","faStop","renderLoginForm","App","basename","exact","strict","Login","SupportPage","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab2e3a98.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n const PrivateRoute = ({ component: Component, ...rest }) =>{\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            sessionStorage.getItem('user')\r\n                ? <Component {...props} />\r\n                : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        )} />   \r\n    )\r\n}\r\nexport default PrivateRoute","import React, { Component } from \"react\";\r\nimport \"./Dropzone.css\";\r\n\r\nclass Dropzone extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { highlight: false };\r\n    this.fileInputRef = React.createRef();\r\n\r\n    this.openFileDialog = this.openFileDialog.bind(this);\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n    this.onDragOver = this.onDragOver.bind(this);\r\n    this.onDragLeave = this.onDragLeave.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n\r\n  openFileDialog() {\r\n    if (this.props.disabled) return;\r\n    this.fileInputRef.current.click();\r\n  }\r\n\r\n  onFilesAdded(evt) {\r\n    if (this.props.disabled) return;\r\n    const files = evt.target.files;\r\n    if (this.props.onFilesAdded) {\r\n      const array = this.fileListToArray(files);\r\n      this.props.onFilesAdded(array);\r\n    }\r\n  }\r\n\r\n  onDragOver(event) {\r\n    event.preventDefault();\r\n    if (this.props.disabed) return;\r\n    this.setState({ highlight: true });\r\n  }\r\n\r\n  onDragLeave(event) {\r\n    this.setState({ highlight: false });\r\n  }\r\n\r\n  onDrop(event) {\r\n    event.preventDefault();\r\n    if (this.props.disabed) return;\r\n    const files = event.dataTransfer.files;\r\n    if (this.props.onFilesAdded) {\r\n      const array = this.fileListToArray(files);\r\n      this.props.onFilesAdded(array);\r\n    }\r\n    this.setState({ highlight: false });\r\n  }\r\n\r\n  fileListToArray(list) {\r\n    const array = [];\r\n    for (var i = 0; i < list.length; i++) {\r\n      array.push(list.item(i));\r\n    }\r\n    return array;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`mx-auto Dropzone ${this.state.highlight ? \"Highlight\" : \"\"}`}\r\n        onDragOver={this.onDragOver}\r\n        onDragLeave={this.onDragLeave}\r\n        onDrop={this.onDrop}\r\n        onClick={this.openFileDialog}\r\n        style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\r\n      >\r\n        <input\r\n          ref={this.fileInputRef}\r\n          className=\"FileInput\"\r\n          type=\"file\"\r\n          accept=\".xml,.csv,.xls\"\r\n          multiple\r\n          onChange={this.onFilesAdded}\r\n        />\r\n        <img\r\n          alt=\"upload\"\r\n          className=\"Icon\"\r\n          src=\"baseline-cloud_upload-24px.svg\"\r\n        />\r\n        <span>Загрузить файлы</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropzone;\r\n","import React, { Component } from 'react';\n\nclass AutoCompleteTextBox extends Component {\n    constructor(props) {\n        super(props);\n        this.autoComplete = this.autoComplete.bind(this)\n    }\n    \n    autoComplete(e){\n        \n    }\n    render () {\n        return (\n            <div className={this.props.className}>\n                <label htmlFor={this.props.name}>{this.props.caption}</label>\n                <input \n                    type = \"text\"\n                    className=\"form-control\" \n                    onInput={this.autoComplete}\n                    onChange={this.props.onChange}\n                    id={this.props.name}\n                    name={this.props.name}\n                    value={this.props.value}\n                    placeholder={this.props.placeholder}                \n                    />\n                <span className=\"muted small\">\n                    {this.props.help}\n                </span>\n            </div>\n        );\n    }        \n}\nexport default AutoCompleteTextBox\n  \n  ","import XmlJS from \"xml-js\"\n\nfunction recurseLevel(obj){\n\n    if (Array.isArray(obj)){\n        let res = [];\n        for (let j = 0;  j < obj.length; ++j){\n            res.push(recurseLevel(obj[j]));\n        }\n        return res;\n    }\n\n    if(obj.type === \"text\"){\n        return obj.text;\n    }\n\n    if(obj.elements){\n        if(obj.elements.length === 1){\n            return recurseLevel(obj.elements[0]);\n        }else{\n            let contents = {};\n            for (let i in obj.elements){\n                if(obj.elements[i].name === \"sensor\"){\n                    if(!contents[\"sensors\"]){\n                        contents[\"sensors\"] = [];\n                    }\n                    let ob_tmp = {\n                        \"sid\" : obj.elements[i].attributes.sid,\n                        \"initial\" : Number.parseFloat(obj.elements[i].attributes.initial)\n                    }\n                    ob_tmp[\"readings\"] = obj.elements[i].elements.sort((a, b) =>{\n                            return a.attributes.time - b.attributes.time;\n                        }).map((a) => {\n                            return Number.parseFloat(a.attributes.value.replace(\",\",\".\"))\n                        }) ;\n\n                    contents[\"sensors\"].push(ob_tmp)\n                }else{\n                    contents[obj.elements[i].name] = recurseLevel(obj.elements[i]);\n                }                    \n            }\n            if(obj.name){\n                let ob_tmp = {};\n                ob_tmp[obj.name] = contents;\n                return ob_tmp;\n            }else{\n                return contents;\n            }                \n        }        \n    }\n    return \"\";\n}\nconst parseXmlToJson = (xml) => {\n    let obj = recurseLevel(XmlJS.xml2js(xml));\n    return obj;\n}\n\nconst parseBlobToJson = (blob) => {\n    let textDecode = new TextDecoder();\n    let uint8 = new Uint8Array();\n    if (typeof blob === 'string'){\n        uint8 = new Uint8Array(blob.split(\",\"));\n        return JSON.parse(textDecode.decode(uint8));\n    }\n\n    return {};\n}\n\nexport default {parseXmlToJson, parseBlobToJson};","import React, { Component } from \"react\";\r\nimport Dropzone from \"../dropzone/Dropzone\";\r\nimport \"./Upload.css\";\r\n\r\nimport AutoCompleteTextBox from \"../../../Controls/AutocompleteTextBox\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSpinner, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport parseXmlToJson from \"../../../helpers/parse-nose-files\"\r\n\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      files: [],\r\n      uploading: false,\r\n      uploadProgress: {},\r\n      successfullUploaded: false,\r\n      gh_api : {},\r\n      catalog: props.root,\r\n      authorized: false,\r\n      user: {}\r\n    };\r\n\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n    this.uploadFiles = this.uploadFiles.bind(this);\r\n    this.onPathChanged = this.onPathChanged.bind(this);\r\n    this.renderActions = this.renderActions.bind(this);\r\n  }\r\n  \r\n  componentDidUpdate(prevProps){\r\n    if(prevProps.root !== this.props.root){\r\n      this.setState({catalog : this.props.root})\r\n    }\r\n  }\r\n\r\n  onFilesAdded(files) {\r\n    this.setState(prevState => ({\r\n      files: prevState.files.concat(files)\r\n    }));\r\n  }\r\n\r\n  onPathChanged(ev) {\r\n    let path = ev.target.value;\r\n    this.setState({catalog: path});\r\n  }\r\n  async uploadFiles() {\r\n    this.setState({ uploadProgress: {}, uploading: true });\r\n    let api = this.props.api\r\n    const promises = [];\r\n    \r\n    let path = this.state.catalog \r\n    if(path[path.length - 1] !== \"/\"){\r\n      path += \"/\"\r\n    }\r\n    if(path[0] === \"/\"){\r\n      path = path.slice(1);\r\n    }\r\n\r\n    path = path.startsWith(this.props.Application.path) ?\r\n    path : this.props.Application.path + path;\r\n\r\n    for(let i = 0; i < this.state.files.length; ++i){\r\n\r\n      let fnam = this.state.files[i].name.toLowerCase().replace(\".xml\",\".uint\");\r\n\r\n      promises.push(new Promise((resolve, reject) => {\r\n        var fr = new FileReader();  \r\n        fr.onload = () => {\r\n          let encoded_utf_8 =  new Uint8Array(fr.result);\r\n          let textDecode = new TextDecoder();\r\n          let textEncoder = new TextEncoder();\r\n\r\n          let json = JSON.stringify(parseXmlToJson.parseXmlToJson(textDecode.decode(encoded_utf_8)))\r\n\r\n          resolve({ name: fnam, path:  path + fnam, content: textEncoder.encode(json).join(\",\") } )\r\n        };\r\n\r\n        fr.addEventListener('progress', (event)=>{\r\n          if (event.lengthComputable) {\r\n            const copy = { ...this.state.uploadProgress };\r\n            copy[fnam] = {\r\n              state: \"pending\",\r\n              percentage: (event.loaded / event.total) \r\n              * 100\r\n            };\r\n            this.setState({ uploadProgress: copy });\r\n          }\r\n        });\r\n\r\n        fr.readAsArrayBuffer(this.state.files[i]);\r\n\r\n      }));\r\n    }\r\n\r\n    try {\r\n      let that = this;\r\n      Promise.all(promises).then(function(files){\r\n        let filenames = files.map(f => f.name);\r\n        \r\n        let upload = api.pushFiles(\"file uploads: \" + filenames.join(\", \"), files);        \r\n\r\n        let updateLoaded = (f) => {\r\n          const copy = { ...that.state.uploadProgress };\r\n          copy[f] = { state: \"done\", percentage: 100 };\r\n          that.setState({ uploadProgress: copy });           \r\n        }\r\n\r\n        upload.then((res) => {\r\n          if(res){\r\n            if(res.status === 200){\r\n              for (var i = 0; i < filenames.length; ++i){\r\n                updateLoaded(filenames[i])\r\n              }\r\n              that.props.onUploadSuccess(path);\r\n            }\r\n          }          \r\n        })\r\n        upload.catch((e) => {\r\n          for (var i = 0; i < filenames.length; ++i){\r\n            const copy = { ...that.state.uploadProgress };\r\n            copy[filenames[i]] = { state: \"fail\", percentage: 100 };\r\n            that.setState({\r\n              successfullUploaded : false,\r\n              uploadProgress: copy\r\n            })\r\n          }\r\n        })\r\n      });\r\n      \r\n\r\n      this.setState({ successfullUploaded: true, uploading: false });\r\n    } catch (e) {\r\n      this.setState({ successfullUploaded: true, uploading: false });\r\n    }\r\n  }\r\n\r\n  renderProgress(file_name) {\r\n    const uploadProgress = this.state.uploadProgress[file_name];\r\n    if (this.state.uploading || this.state.successfullUploaded) {\r\n      return (\r\n        <span className=\"d-inline pl-3\">\r\n            <FontAwesomeIcon icon={faCheckCircle} className={uploadProgress && uploadProgress.state === \"done\"?\r\n            \"text-secondary\" : \"d-none\" } />\r\n             <FontAwesomeIcon icon={faSpinner} className={uploadProgress && uploadProgress.state === \"done\"?\r\n          \"d-none\" : \"text-warning fa-spin\"} />                   \r\n        </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderActions() {\r\n    if (this.state.successfullUploaded) {\r\n      return (\r\n        <button\r\n          onClick={() =>\r\n            this.setState({ files: [], successfullUploaded: false })\r\n          }\r\n        >\r\n          Очистить\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          disabled={this.state.files.length < 0 || this.state.uploading}\r\n          onClick={this.uploadFiles}\r\n          className=\"px-5\"\r\n        >\r\n          Загрузить\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n      \r\n      return (\r\n        <div className={this.props.className}>\r\n          <span className=\"Title h4 py-3\">Загрузка файлов</span>\r\n          <div className=\"row pt-3\">\r\n            <AutoCompleteTextBox \r\n              name=\"auto-complete-catalogs\" \r\n              caption=\"каталог файлов\" \r\n              className=\"col-12 border-bottom form-group text-left py-3 mb-3\" \r\n              help=\"Определить в какую группу отправить файлы. e.g. vsuet/vosdux\" \r\n              placeholder=\"\"\r\n              value={this.state.catalog}\r\n              onChange={this.onPathChanged}\r\n              />\r\n            <div className=\"col-12 col-md-8 col-lg-6\"> \r\n              <Dropzone\r\n                onFilesAdded={this.onFilesAdded}\r\n                disabled={this.state.uploading || this.state.successfullUploaded}\r\n              />\r\n              <div className=\"col-12 text-center py-3\">{this.renderActions()}</div>\r\n            </div>\r\n            <div className=\"col-12 col-md-4 col-lg-6\">\r\n              <div className=\"row text-left\">\r\n                {this.state.files.map(file => {\r\n                  let show_f_name = file.name.toLowerCase().replace(\".xml\",\".uint\")\r\n                  return (\r\n                    <div key={show_f_name} className=\"col-12 col-md-6 col-lg-4\">\r\n                      <span className=\"\">{show_f_name}</span>\r\n                      {this.renderProgress(show_f_name)}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>            \r\n            </div>\r\n          </div>\r\n        </div> \r\n      );\r\n    }\r\n}\r\n\r\nexport default Upload;\r\n","import React, {Component} from \"react\";\n\nString.prototype.hashCode = function() {\n    var hash = 0, i, chr;\n    if (this.length === 0) return hash;\n    for (i = 0; i < this.length; i++) {\n      chr   = this.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return Math.abs(hash);\n};\n\nclass noseMeasureTable extends Component {\n    constructor (props){\n        super(props);\n\n        this.state = {\n            columns : [],\n            data : [],\n            page : 0, \n            rows : props.rows\n        }\n        this.onClickPagination = this.onClickPagination.bind(this);\n    }\n    fleques_large_table_columns(){\n        if(!this.props.data.measure) \n            return;\n        var columns = <div className={this.props.headerClass  + ' pb-4 z-200 sticky-columns text-center'}>\n                        <div className='row px-3'>\n                            <div className=\"col-12 h6\">\n                                {this.props.data.measure.start \n                                + \" \" + this.props.data.measure.name \n                                + \" \"+ this.props.data.measure.description}\n                            </div>\n                            <div key={\"col_id\"} className='col-1'>\n                                ID\n                            </div>\n                            {\n                                this.state.columns.map((c) => {\n                                    return <div key={\"col_\" + c.field} className='col '>\n                                        {c.title}\n                                    </div>\n                                })\n                            }\n                        </div>\n                    </div>\n        return columns;\n    }\n    fleques_large_table_rows(){\n        var rows = [];\n        let cls = \"\";\n        let init = this.state.page * this.state.rows + 1;\n        let end = Math.min(init + this.state.rows, this.state.data.length);\n\n        for(var i = init; i < end;  ++i){           \n            rows.push(\n                <div key={\"row_\" +  i} className={cls + ' row border-bottom py-2 px-3'}>\n                    {<div key={\"cell_counter_\" + i} className='col-1'>    \n                            {i}\n                        </div>}\n                {this.state.columns.map((j) => {\n                    return  <div key={\"cell_\" + j.field} className='col'>    \n                            {this.state.data[i][j.field]}\n                        </div>\n                    })\n                }                 \n            </div>\n            );\n        }\n        rows.push(<div key={\"row_pagination\"} className={cls + ' row py-2 px-3 '}> {this.flequesGetPagination()}</div>)\n        return rows;\n    }\n    onClickPagination(page){\n        this.setState({page : page});\n    }\n    flequesGetPagination(){\n        let pages = Math.floor(this.state.data.length/ this.state.rows) + (this.state.data.length % this.state.rows ? 1 : 0);\n\n        let btns = [];\n        for(let i = 0; i < pages; ++i){\n            btns.push(\n                <span key={\"page_\" + i} className={\"btn btn-transparent mx-0 text-muted text-small\" + (this.state.page === i ? \" bg-primary text-white\" : \"\")} onClick={() => this.onClickPagination(i)}>\n                    {i + 1}\n                </span>\n            )\n        }\n        return btns;\n    }\n    flequesLargeTable(){\n        var columns = this.fleques_large_table_columns( \"bg-primary\");\n        var rows = this.fleques_large_table_rows();\n        \n        return <div className={this.props.className}>\n                    {columns}\n                    {rows}\n                </div>\n    }\n    componentDidUpdate(oldProps){\n        if(this.props.data.measure !== oldProps.data.measure){\n\n            let table_data = [], columns = [];\n            let src = this.props.data.measure.sensors;\n    \n            for(let i = 0; i < src.length; ++i){ //traverse across columns\n                let col_id = \"field_\" + src[i].sid.hashCode();\n                columns.push({\n                    \"field\" : col_id,\n                    \"title\" : src[i].sid\n                });\n                for (let j = 0; j < src[i].readings.length; ++j){\n                    if(!table_data[j]){\n                        table_data[j] = {};\n                    }\n                    table_data[j][col_id] = src[i].readings[j]\n                }\n            }\n            this.setState({\n                columns : columns,\n                data : table_data\n            })\n        }\n    }\n    \n    render(){\n        return this.flequesLargeTable()\n    }\n}\n\nexport default noseMeasureTable","import React from \"react\";\n\nconst ListEntry =  (props) => {\n    return <div className={props.className + \" mouse-pointer\"} onClick={props.onClick}>\n        {props.caption}\n    </div>\n\n}\n\nexport default ListEntry;","import React, {Component} from \"react\";\nimport ListEntry from \"./listEntry\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome} from '@fortawesome/free-solid-svg-icons'\n\nclass FileList extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            root : props.root,\n            files: props.files\n        }\n    }\n    componentDidUpdate(prevProps){\n        if(JSON.stringify(prevProps) !== JSON.stringify(this.props)){\n            this.setState({root : this.props.root, files : this.props.files})\n        }\n    }\n    onClickDir(path){\n        this.props.onClickDir(path);\n        this.setState({root : path});\n    }\n    \n    showFileList(){\n        if (this.state.files){            \n            if(this.state.root === \"\"){\n                return this.state.files.filter((a) => a.type === \"tree\").map((f) => {\n                    return <ListEntry key={f.sha} onClick={() => this.onClickDir(f.path)} caption={f.path} className=\"d-flex text-secondary\" />\n                })\n            }else{\n                return [<ListEntry key=\"root\" onClick={() => this.onClickDir(\"\")} caption={<FontAwesomeIcon icon={faHome}/>} className=\"d-flex text-secondary h5\" />]\n                .concat( this.state.files\n                    .filter((a) =>     \n                        a.path.startsWith(this.state.root) \n                        && a.path.replace(this.state.root,\"\").split(\"/\").length === 2\n                        && a.type !== \"tree\"\n                    )\n                    .map((f) => {\n                        let f_arr = f.path.replace(this.state.root + \"/\",\"\").split(\".\")\n                        let f_n = f_arr.slice(0,f_arr.length - 1).join(\".\")\n\n                        return <ListEntry key={f.sha} onClick={(e) => this.props.onClickFile(f)} caption={f_n} className=\"d-flex text-secondary\" />\n                    }))\n            }                        \n        }\n        return \"\";\n    }\n\n\n    render(){\n        const def_title = \"файлы на сервере\";\n\n        return (<div className={this.props.className} >\n                    <h4>{this.props.title || def_title}</h4>\n                    <div className=\"mh-85 mh-md-85 y-scroll-auto\">\n                        {this.showFileList()}\n                    </div>                    \n                </div>);        \n    }\n}\n\nexport default FileList;","import GitHub from 'github-api';\n\n//Uses the https://github.com/github-tools/github library under the hood and exposes it as `gh` property\nexport default function GithubAPI(auth) {\n    let repo;\n    let filesToCommit = [];\n    let currentBranch = {};\n    let newCommit = {};\n    \n    //the underlying library for making requests\n    let gh = new GitHub(auth);\n\n    this.getApi = () => gh;\n    /**\n     * Sets the current repository to make push to\n     * @public\n     * @param {string} userName Name of the user who owns the repository\n     * @param {string} repoName Name of the repository\n     * @return void\n     */\n    this.setRepo = function(userName, repoName) {\n        repo = gh.getRepo(userName, repoName);\n        return repo;\n    }\n\n    /**\n     * Sets the current branch to make push to. If the branch doesn't exist yet,\n     * it will be created first\n     * @public\n     * @param {string} branchName The name of the branch\n     * @return {Promise}\n     */\n    this.setBranch = function(branchName) {\n        if (!repo) {\n            throw 'Repository is not initialized';\n        }\n        \n\n        return repo.listBranches().then((branches) => {\n\n            let branchExists = branches.data.find( branch => branch.name === branchName );\n\n            if (!branchExists) {\n                return repo.createBranch('master', branchName)\n                    .then(() => {\n                        currentBranch.name = branchName;\n                    });\n            } else {\n                currentBranch.name = branchName;\n            }\n        });\n    }\n\n    /**\n     * Makes the push to the currently set branch\n     * @public\n     * @param  {string}   message Message of the commit\n     * @param  {object[]} files   Array of objects (with keys 'content' and 'path'),\n     *                            containing data to push\n     * @return {Promise}\n     */\n    this.pushFiles = function(message, files) {\n        if (!repo) {\n            throw 'Repository is not initialized';\n        }\n        \n        if (!currentBranch.hasOwnProperty('name')) {\n            throw 'Branch is not set';\n        }\n\n        return getCurrentCommitSHA()\n            .then(getCurrentTreeSHA)\n            .then( () => createFiles(files) )\n            .then(createTree)\n            .then( () => createCommit(message) )\n            .then(updateHead)\n            .catch((e) => {\n                console.error(e);\n            });\n    }\n\n    /**\n     * Sets the current commit's SHA\n     * @private\n     * @return {Promise}\n     */\n    function getCurrentCommitSHA() {\n        return repo.getRef('heads/' + currentBranch.name)\n            .then((ref) => {\n                currentBranch.commitSHA = ref.data.object.sha;\n            });\n    }\n\n    /**\n     * Sets the current commit tree's SHA\n     * @private\n     * @return {Promise}\n     */\n    function getCurrentTreeSHA() {\n        return repo.getCommit(currentBranch.commitSHA)\n            .then((commit) => {\n                currentBranch.treeSHA = commit.data.tree.sha;\n            });\n    }\n\n    /**\n     * Creates blobs for all passed files\n     * @private\n     * @param  {object[]} filesInfo Array of objects (with keys 'content' and 'path'),\n     *                              containing data to push\n     * @return {Promise}\n     */\n    function createFiles(filesInfo) {\n        let promises = [];\n        let length = filesInfo.length;\n\n        for (let i = 0; i < length; i++) {\n            promises.push(createFile(filesInfo[i]));\n        }\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Creates a blob for a single file\n     * @private\n     * @param  {object} fileInfo Array of objects (with keys 'content' and 'path'),\n     *                           containing data to push\n     * @return {Promise}\n     */\n    function createFile(fileInfo) {\n        return repo.createBlob(fileInfo.content)\n            .then((blob) => {\n                filesToCommit.push({\n                    sha: blob.data.sha,\n                    path: fileInfo.path,\n                    mode: '100644',\n                    type: 'blob'\n                });\n            });\n    }\n\n    /**\n     * Creates a new tree\n     * @private\n     * @return {Promise}\n     */\n    function createTree() {\n        return repo.createTree(filesToCommit, currentBranch.treeSHA)\n            .then((tree) => {\n                newCommit.treeSHA = tree.data.sha;\n            });\n    }\n\n    /**\n     * Creates a new commit\n     * @private\n     * @param  {string} message A message for the commit\n     * @return {Promise}\n     */\n    function createCommit(message) {\n        return repo.commit(currentBranch.commitSHA, newCommit.treeSHA, message)\n            .then((commit) => {\n                newCommit.sha = commit.data.sha;\n            });\n    }\n\n    /**\n     * Updates the pointer of the current branch to point the newly created commit\n     * @private\n     * @return {Promise}\n     */\n    function updateHead() {\n        return repo.updateHead('heads/' + currentBranch.name, newCommit.sha);\n    }\n};","import React, { Component } from \"react\";\nimport \"./index.css\";\nimport Upload from \"./upload/Upload\";\n\nimport NoseMeasureTables from \"../../Components/NoseTables\";\nimport FileList from \"../../Components/FileList\";\nimport GithubAPI from \"../../helpers/gh-helper\"\nimport Application from \"../../Configs/package\"\nimport parseBlobToJson from \"../../helpers/parse-nose-files\"\n\nclass UploadPage extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      gh_api : {},\n      authorized: false,\n      user: {}, \n      files : [],\n      root : \"\",\n      repo : null,\n      openfile : {}\n    };\n    this.onClickDir =  this.onClickDir.bind(this);\n    this.onClickFile = this.onClickFile.bind(this);\n    this.onUploadSuccess = this.onUploadSuccess.bind(this);\n  }\n  componentDidMount(){\n    let user = sessionStorage.getItem(\"user\");\n    if(user){\n      user = JSON.parse(user);\n\n      const api = new GithubAPI({\n        token: user.token\n      })  \n      api.setRepo(Application.user, Application.repo);\n\n      let attempt_set_api = api.setBranch(Application.branch);\n\n      attempt_set_api.then(() => {\n        let repo = api.getApi().getRepo(Application.user, Application.repo);\n\n        let trees = repo.getTree(Application.branch+\"?recursive=1\")\n\n        let that = this;\n\n        trees.then(function(res){\n          let files = [];\n          if(res && res.data && res.data.tree){\n            files = res.data.tree.filter((f) => f.path.includes(\"data\"))\n          }\n          that.setState({ authorized: true, user : user, gh_api: api, files : files, repo : repo });\n        })\n\n        trees.catch((e) => {\n          that.setState({ authorized: true, user : user, gh_api: api, repo : repo  });\n        })\n      })\n\n      attempt_set_api.catch((e) => {\n        this.setState({ authorized: false, user : user });\n      })\n    }\n  }\n  onClickDir(path){\n    this.setState({root : path});\n  }\n\n  onClickFile(file){\n    let repo = this.state.gh_api.getApi().getRepo(Application.user, Application.repo);\n\n    let filecontent = repo.getBlob(file.sha);\n    let that = this;\n\n    filecontent.then(function(blob){\n\n      if(blob.status === 200){\n        let openfile = parseBlobToJson.parseBlobToJson(blob.data);\n        that.setState({openfile})\n      }      \n    })\n\n    filecontent.catch((e) => {\n      console.log(e)\n    })\n  }\n  onUploadSuccess(path){\n    if(path[path.length - 1 ] === \"/\"){\n      path = path.slice(0,path.length - 1)\n    }\n    if (this.state.repo){\n      let trees = this.state.repo.getTree(Application.branch+\"?recursive=1\")\n\n      let that = this;\n\n      trees.then(function(res){\n        let files = [];\n        if(res && res.data && res.data.tree){\n          files = res.data.tree\n        }\n        that.setState({ files : files, root : path });\n      })\n\n      trees.catch((e) => {\n        console.log(e);\n      })\n    }\n  }\n\n  render() {\n    if (this.state.authorized){     \n      return (\n        <div className=\"\">\n          <div className=\"container-fluid mt-5\">\n            <div className=\"row px-3\">\n              <div className=\"col-12 col-md-8 col-lg-9\">\n                <Upload onUploadSuccess={this.onUploadSuccess} root={this.state.root} className=\"card mt-3 mt-md-4 col-12\" Application={Application} api={this.state.gh_api}/>\n\n                <NoseMeasureTables headerClass=\"bg-primary text-white\" \n                rows={5}\n                data={this.state.openfile} className=\"card mt-3 mt-md-4 col-12 px-0\" />\n              </div>\n              <FileList onClickDir={this.onClickDir} onClickFile={this.onClickFile} root={this.state.root} files={this.state.files} className=\"card mt-3 mt-md-4 pt-3 col-12 col-md-4 col-lg-3 \"/>\n            </div>          \n          </div>\n        </div>\n      );\n    }\n    return \"загрузка ....\";\n  }\n}\n\nexport default UploadPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport AppConfig from \"../../Configs/package\";\nimport { useLocation } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  let location = useLocation();\n\n  return (\n    <nav className={\"navbar navbar-dark bg-primary fixed-top \" + props.className} >\n      <Link className={\"nav-item text-white no-underline \" + (location.pathname == \"/\" ? \"border-bottom border-2x border-danger\": \"\")} to=\"/\">\n        {AppConfig.appname}\n      </Link>\n      {/* <Link className=\"nav-item text-white\" to=\"/models\">\n        Модели\n      </Link>\n      <Link className=\"nav-item text-white\" to=\"/noses\">\n        Электроные носы\n      </Link> */}\n      \n      <Link className={\"nav-item text-white no-underline \" + (location.pathname == \"/investigations\" ? \"border-bottom border-2x border-danger\": \"\")} to=\"/investigations\">\n        Исследования\n      </Link>\n\n      <Link className={\"nav-item text-white no-underline \" + (location.pathname == \"/upload\" ? \"border-bottom border-2x border-danger\": \"\")} to=\"/upload\">\n        Загрузка файлов носа\n      </Link>\n      \n      <Link className={\"nav-item text-white no-underline \" + (location.pathname == \"/support\" ? \"border-bottom border-2x border-danger\": \"\")} to=\"/support\">\n        Поддержка \n      </Link>\n    </nav>\n  );\n}\n\nexport default NavBar;","import React, { Component } from \"react\";\nimport NavBar from \"../../Components/navbar\";\nimport FileList from \"../../Components/FileList\";\nimport GithubAPI from \"../../helpers/gh-helper\"\nimport Application from \"../../Configs/package\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner} from '@fortawesome/free-solid-svg-icons'\n\nconst BRANCH = \"investigations\"\nconst ALLOWED_EXTS = [\".html\", \".jpg\", \".png\"]\nconst BASE = 0, LOADING = 1, ERROR = 2, SUCCESS = 0;\n\nclass InvestigationsPage extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      gh_api : {},\n      authorized: false,\n      user: {}, \n      preview_html : null,\n      preview_file_status : 0,\n      files : [],\n      root : \"\",\n      repo : null,\n      openfile : {}\n    };\n    this.onClickDir =  this.onClickDir.bind(this);\n    this.onClickFile = this.onClickFile.bind(this);\n  }\n  componentDidMount(){\n    let user = sessionStorage.getItem(\"user\");\n    if(user){\n      user = JSON.parse(user);\n\n      const api = new GithubAPI({\n        token: user.token\n      })  \n      api.setRepo(Application.user, Application.repo);\n\n      let attempt_set_api = api.setBranch(BRANCH);\n\n      attempt_set_api.then(() => {\n        let repo = api.getApi().getRepo(Application.user, Application.repo);\n\n        let trees = repo.getTree(BRANCH+\"?recursive=1\")\n\n        let that = this;\n\n        trees.then(function(res){\n          let files = [];\n          if(res && res.data && res.data.tree){\n            files = res.data.tree.filter((f) => f.path.includes(\"progress\") && !f.path.includes(\".fld\"))\n          }\n          that.setState({ authorized: true, user : user, gh_api: api, files : files, repo : repo });\n        })\n\n        trees.catch((e) => {\n          that.setState({ authorized: true, user : user, gh_api: api, repo : repo  });\n        })\n      })\n\n      attempt_set_api.catch((e) => {\n        this.setState({ authorized: false, user : user });\n      })\n    }\n  }\n  onClickDir(path){\n    this.setState({root : path});\n  }\n  processHtml(file, repo){\n    let filecontent = repo.getBlob(file.sha);\n    let that = this;\n\n    filecontent.then(function(blob){\n      if(blob.status === 200){\n        that.setState({preview_html: blob.data, preview_file_status: SUCCESS})\n      }      \n    })\n\n    filecontent.catch((e) => {\n      this.setState({preview_file_status: ERROR});\n      console.log(e)\n    })\n  }\n  \n  processImages(file){\n    // TODO find other associated files, eg. json with description of what the image is all about etc. \n  }\n\n  renderFilePreviewProgress(){\n    switch (this.state.preview_file_status){\n      case BASE:\n      case SUCCESS:\n        return \"\";\n      case ERROR:\n        return <div>\n          ... загрузка файла не удалась \n        </div>\n      case LOADING:\n        return <div className=\"col-12 text-center pt-5 mt-5\">\n          <FontAwesomeIcon icon={faSpinner} className= \"text-primary fa-spin fa-5x\" /> \n        </div> \n    }\n  }\n\n  onClickFile(file){\n    const file_arr = file.path.split(\".\");\n    const file_ext = \".\" + file_arr[file_arr.length - 1]\n\n    this.setState({preview_file_status: LOADING, preview_html : \"\"});\n\n    if(ALLOWED_EXTS.includes(file_ext)){\n      let repo = this.state.gh_api.getApi().getRepo(Application.user, Application.repo);\n\n      switch (file_ext){\n        case \".html\":\n          this.processHtml(file, repo)\n          break;\n        default:\n          return;\n      }\n    }else{\n      this.setState({preview_file_status: ERROR});\n    }   \n  }\n  \n  render() {\n    if (this.state.authorized){     \n      return (\n        <div className=\"\">\n          <div className=\"container-fluid mt-5\">\n            <div className=\"row px-3\">\n              <FileList title=\"Прогресс\" onClickDir={this.onClickDir} onClickFile={this.onClickFile} root={this.state.root} files={this.state.files} className=\"card mt-3 mt-md-4 pt-3 col-8 col-md-4 col-lg-3 d-none d-md-block\"/>\n\n              <div className=\"col-12 col-md-8 col-lg-9 \">\n                {this.renderFilePreviewProgress()}\n                <iframe title=\"preview-html-files\" className=\"col-12 px-0 border-0 min-h-85 mh-85 mh-md-85\" srcDoc={this.state.preview_html}>\n                </iframe>                \n              </div>\n              \n            </div>          \n          </div>\n        </div>\n      );\n    }\n    return \"загрузка ....\";\n  }\n}\n\nexport default InvestigationsPage;\n","import React, { Component } from \"react\";\nimport NavBar from \"../../Components/navbar\";\nimport FileList from \"../../Components/FileList\";\nimport GithubAPI from \"../../helpers/gh-helper\"\nimport Application from \"../../Configs/package\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner} from '@fortawesome/free-solid-svg-icons'\n\nconst BRANCH = \"investigations\"\nconst ALLOWED_EXTS = [\".json\", \".jpg\", \".png\"]\nconst BASE = 0, LOADING = 1, ERROR = 2, SUCCESS = 0;\n\nclass InvestigationsPage extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      gh_api : {},\n      authorized: false,\n      user: {}, \n      preview_html : null,\n      preview_file_status : 0,\n      files : [],\n      root : \"\",\n      repo : null,\n      openfile : {}\n    };\n    this.onClickDir =  this.onClickDir.bind(this);\n    this.onClickFile = this.onClickFile.bind(this);\n  }\n  componentDidMount(){\n    let user = sessionStorage.getItem(\"user\");\n    if(user){\n      user = JSON.parse(user);\n\n      const api = new GithubAPI({\n        token: user.token\n      })  \n      api.setRepo(Application.user, Application.repo);\n\n      let attempt_set_api = api.setBranch(BRANCH);\n\n      attempt_set_api.then(() => {\n        let repo = api.getApi().getRepo(Application.user, Application.repo);\n\n        let trees = repo.getTree(BRANCH+\"?recursive=1\")\n\n        let that = this;\n\n        trees.then(function(res){\n          let files = [];\n          if(res && res.data && res.data.tree){\n            files = res.data.tree.filter((f) => f.path.includes(\"support\"))\n          }\n          that.setState({ authorized: true, user : user, gh_api: api, files : files, repo : repo });\n        })\n\n        trees.catch((e) => {\n          that.setState({ authorized: true, user : user, gh_api: api, repo : repo  });\n        })\n      })\n\n      attempt_set_api.catch((e) => {\n        this.setState({ authorized: false, user : user });\n      })\n    }\n  }\n  onClickDir(path){\n    this.setState({root : path});\n  }\n\n  processVideo(file, repo){\n    let filecontent = repo.getBlob(file.sha);\n    let that = this;\n\n    filecontent.then(function(blob){\n      if(blob.status === 200){\n        const encoder = new TextEncoder()\n\n        let video = new Blob([encoder.encode(blob.data)], {\"type\" : \"video\\/mp4\"});\n        var value = URL.createObjectURL(video);\n\n        console.log(value, video)\n\n        // let reader = new FileReader();\n        // reader.onload = event => {\n        //     let buffer = event.target.result;\n        //     console.log(buffer);\n        // };\n        // reader.readAsArrayBuffer(value);\n\n        let html =  <video>\n                      <source src={value} />\n                    </video>\n        that.setState({preview_html: html, preview_file_status: SUCCESS})\n      }      \n    })\n\n    filecontent.catch((e) => {\n      this.setState({preview_file_status: ERROR});\n      console.log(e)\n    })\n  }\n  \n  processImages(file){\n    // TODO find other associated files, eg. json with description of what the image is all about etc. \n  }\n\n  renderFilePreviewProgress(){\n    switch (this.state.preview_file_status){\n      case BASE:\n      case SUCCESS:\n        return \"\";\n      case ERROR:\n        return <div>\n          ... загрузка файла не удалась \n        </div>\n      case LOADING:\n        return <div className=\"col-12 text-center pt-5 mt-5\">\n          <FontAwesomeIcon icon={faSpinner} className= \"text-primary fa-spin fa-5x\" /> \n        </div> \n    }\n  }\n\n  onClickFile(file){\n    const file_arr = file.path.split(\".\");\n    const file_ext = \".\" + file_arr[file_arr.length - 1]\n\n    this.setState({preview_file_status: LOADING, preview_html : \"\"});\n\n    if(ALLOWED_EXTS.includes(file_ext)){\n      let repo = this.state.gh_api.getApi().getRepo(Application.user, Application.repo);\n\n      switch (file_ext){\n        case \".html\":\n          this.processHtml(file, repo)\n          break;\n        case \".mp4\":\n          this.processVideo(file, repo)\n          break;\n        default:\n          return;\n      }\n    }else{\n      this.setState({preview_file_status: ERROR});\n    }   \n  }\n  \n  render() {\n    if (this.state.authorized){     \n      return (\n        <div className=\"\">\n          <div className=\"container-fluid mt-5\">\n            <div className=\"row px-3\">\n              <FileList title=\"Служба поддержки\" onClickDir={this.onClickDir} onClickFile={this.onClickFile} root={this.state.root} files={this.state.files} className=\"card mt-3 mt-md-4 pt-3 col-8 col-md-4 col-lg-3 d-none d-md-block min-h-85 mh-85 mh-md-85\"/>\n\n              <div className=\"col-12 col-md-8 col-lg-9 \">\n                {this.renderFilePreviewProgress()}\n                {this.state.preview_html}            \n              </div>\n              \n            </div>          \n          </div>\n        </div>\n      );\n    }\n    return \"загрузка ....\";\n  }\n}\n\nexport default InvestigationsPage;\n","import React from 'react';\nimport NavBar from \"../../Components/navbar\";\nimport AppConfig from \"../../Configs/package\"\n\n\nexport default function Home() {\n    return (\n        <div className=\"\">            \n            <div className=\"container-fluid mt-5\">\n                <div className=\"col-12 h3\">\n                    Добро пожаловать на платформе {AppConfig.appname} \n                </div>\n                <div className=\"col-12\">{AppConfig.description} \n                </div>\n            </div>\n        </div>      \n    );\n  }\n  ","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport GithubAPI from \"../../../helpers/gh-helper\"\nimport Application from \"../../../Configs/package\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner, faStop} from '@fortawesome/free-solid-svg-icons'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            login: '',\n            password: '',\n            submitted: false,\n            user : {},\n            error: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    componentDidMount(){\n        sessionStorage.removeItem('user');\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({ [name]: value, submitted: false });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { login, password } = this.state;\n        this.setState({submitted: true})\n        let user = {\n            \"name\" : login,\n            \"token\" : password\n        }\n        const api = new GithubAPI({\n            token: user.token\n        });\n\n        api.setRepo(Application.user, Application.repo);\n\n        let attempt_set_api = api.setBranch(Application.branch);\n\n        attempt_set_api.then(() => {\n            sessionStorage.setItem(\"user\", JSON.stringify(user));\n            this.setState({ submitted: true, user : user });\n        })\n\n        attempt_set_api.catch((e) => {\n            this.setState({error: true})\n        })\n    }\n\n    renderLoginForm() {\n        const { login, password, submitted, error } = this.state;\n        return (\n            <div className=\"container p-5\">\n                <form className=\"row mt-5 p-md-5 bg-primary text-white max-w-600px mx-auto\" onSubmit={this.handleSubmit}>\n                    <div className={error ? \"col-12 text-danger\": \"invisible col-12\"}>\n                        Пользователь не аутентифицирован\n                    </div>\n                    <div className='form-group col-12'>\n                        <label htmlFor=\"login\">логин</label>\n                        <input\n                            type=\"text\"\n                            name=\"login\"\n                            value={login}\n                            className={\"form-control col-12 mb-3\" + (submitted && !login ? ' border-danger' : '')}\n                            onChange={this.handleChange}\n                        />\n                        {submitted && !login &&\n                            <div className=\"text-danger\">обязателная поля</div>\n                        }\n                    </div>\n                    <div className='form-group col-12'>\n                        <label htmlFor=\"password\">пароль</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            className={\"form-control col-12 mb-3\" + (submitted && !password ? ' border-danger' : '')}\n                            onChange={this.handleChange}\n                        />\n                        {submitted && !password &&\n                            <div className=\"text-danger\">обязателная поля</div>\n                        }\n                    </div>\n                    <div className=\"form-group col-12\">\n                        <button \n                            type=\"submit\"\n                            className=\"form-control col-12 mb-3\"\n                        >\n                            Войти &nbsp;\n                            {\n                                submitted ?\n                                <FontAwesomeIcon icon={faStop} className={error?\n                                \"text-danger d-none\" : \"d-none\"} /> : \"\"\n                            }\n                            {\n                                submitted ?\n                                <FontAwesomeIcon icon={faSpinner} className={error?\n                                    \"d-none\" : \"text-success\"} /> : \"\"\n                            }\n                                \n                        </button>\n                        \n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n    render() {\n        return this.state.user.token\n            ? <Redirect to={{ pathname: '/', state: { from: \"/login\" } }} />\n            : this.renderLoginForm();\n    }\n}\n\nexport default LoginPage","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport PrivateRoute from \"./Components/privateRoute\"\n\n\nimport UploadPage from \"./Pages/FileUploader\";\nimport InvestigationsPage from \"./Pages/Investigations\";\nimport SupportPage from \"./Pages/Support\";\nimport Home from \"./Pages/Home\";\nimport Login from \"./Pages/Auth/Login\";\nimport NavBar from \"./Components/navbar\";\n\nimport './Css/bootstrap.css';\nimport './Css/App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"\">\n          {sessionStorage.getItem('user') && <NavBar className=\"mb-5\" /> }\n          <Route exact strict path=\"/login\" component={Login} />\n          {/* <Route exact strict path=\"/nose-face/login/\" component={Login} /> */}\n          <PrivateRoute exact path=\"/\" component={Home} />\n          {/* <PrivateRoute exact strict  path=\"/\" component={Home} /> */}\n          <PrivateRoute exact strict path=\"/upload\" component={UploadPage} />\n          {/* <PrivateRoute exact strict path=\"/upload\" component={UploadPage} /> */}\n          <PrivateRoute exact strict path=\"/investigations\" component={InvestigationsPage} />\n          <PrivateRoute exact strict path=\"/support\" component={SupportPage} />\n          {/* <PrivateRoute exact strict path=\"/investigations\" component={InvestigationsPage} />           */}\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './Css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}